version: '3.8'

services:
  kuma:
    image: louislam/uptime-kuma:${KUMA_VERSION}
    container_name: kuma
    restart: always
    ports:
      - ${KUMA_PORT}:${KUMA_PORT}
    environment:
      UPTIME_KUMA_ADMIN_EMAIL: ${UPTIME_KUMA_ADMIN_EMAIL}
      UPTIME_KUMA_ADMIN_PASSWORD: ${UPTIME_KUMA_ADMIN_PASSWORD}
      UPTIME_KUMA_BASIC_AUTH_USERNAME: ${UPTIME_KUMA_BASIC_AUTH_USERNAME}
      UPTIME_KUMA_BASIC_AUTH_PASSWORD: ${UPTIME_KUMA_BASIC_AUTH_PASSWORD}
      UPTIME_KUMA_PROMETHEUS_URL: ${UPTIME_KUMA_PROMETHEUS_URL}
      UPTIMEKUMA_GRAFANA_ENABLE: ${UPTIMEKUMA_GRAFANA_ENABLE}
      UPTIMEKUMA_GRAFANA_URL: ${UPTIMEKUMA_GRAFANA_URL}
    volumes:
      - ./uptime-kuma:/app/data
    networks:
      connet:
        ipv4_address: ${KUMA_IPV4}
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION}
    container_name: prometheus
    restart: unless-stopped
    ports:
      - ${PROMETHEUS_PORT}:${PROMETHEUS_PORT}
    networks:
      connet:
        ipv4_address: ${PROMETHEUS_IPV4}
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus/data
      - ./config/alertmanager.yml:/etc/prometheus/alertmanager.yml
      - ./config/alert_rules.yml:/etc/prometheus/alert_rules.yml
    user: "root:root"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  alertmanager:
    image: prom/alertmanager:${ALERTMANAGER_VERSION}
    container_name: alertmanager
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    ports:
      - ${ALERTMANAGER_PORT}:${ALERTMANAGER_PORT}
    networks:
      connet:
        ipv4_address: ${ALERTMANAGER_IPV4}

  alert-producer:
    image: alert-producer:${ALERT_PRODUCER_VERSION}
    container_name: alert-producer
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${ALERT_PRODUCER_PORT}:${ALERT_PRODUCER_PORT}
    restart: unless-stopped
    environment:
      GOTIFY_URL: ${GOTIFY_URL}
      GOTIFY_DEFAULT_PRIORITY: ${GOTIFY_DEFAULT_PRIORITY}
      GOTIFY_TOKEN: ${GOTIFY_TOKEN}
      PORT: ${ALERT_PRODUCER_PORT}
    networks:
      connet:
        ipv4_address: ${ALERT_PRODUCER_IPV4}

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION}
    container_name: grafana
    restart: unless-stopped
    ports:
      - ${GRAFANA_PORT}:${GRAFANA_PORT}
    depends_on:
      - prometheus
    networks:
      connet:
        ipv4_address: ${GRAFANA_IPV4}
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./config/grafana:/etc/grafana/provisioning/
      - grafana_data:/var/lib/grafana

networks:
  connet:
    external: true

volumes:
  grafana_data:
  prometheus_data: